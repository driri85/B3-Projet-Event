name: CI/CD Elastic Beanstalk

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      SUPER_ADMIN_EMAIL: ${{ secrets.SUPER_ADMIN_EMAIL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install EB CLI
        run: |
          python3 -m pip install --upgrade --user awsebcli
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize EB CLI
        run: |
          eb init test -r ${{ secrets.AWS_REGION }} -p "Node.js 22 running on 64bit Amazon Linux 2023" --keyname aws-eb

      - name: Set environment to use
        run: eb use b2-vue-env2

      - name: Deploy to Elastic Beanstalk with wait
        run: |
          VERSION_LABEL=$(git rev-parse --short HEAD)-$GITHUB_RUN_ID
          ZIP_NAME="app-$VERSION_LABEL"
          
          echo "Creating version label: $ZIP_NAME"
          
          eb init test -r ${{ secrets.AWS_REGION }} -p "Node.js 22 running on 64bit Amazon Linux 2023" --keyname aws-eb
          eb use b2-vue-env2
      
          echo "Creating application version archive..."
          eb create --label "$ZIP_NAME" || true
      
          echo "Uploading and waiting for version to register..."
          eb deploy --label "$ZIP_NAME" --verbose --timeout 60 || {
            echo "Waiting for EB to register version..."
            sleep 10
            eb deploy --label "$ZIP_NAME" --verbose --timeout 60
          }
          eb status
