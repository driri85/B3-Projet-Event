name: CI/CD Elastic Beanstalk

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      SUPER_ADMIN_EMAIL: ${{ secrets.SUPER_ADMIN_EMAIL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies & build
        run: |
          npm ci

      - name: Install EB CLI
        run: |
          python3 -m pip install --upgrade --user awsebcli
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Package and Deploy to Elastic Beanstalk
        run: |
          # Define version label
          VERSION_LABEL="app-$(date +%s)"
          ZIPFILE="${VERSION_LABEL}.zip"
          AWS_BUCKET="elasticbeanstalk-${AWS_REGION}-${AWS_ACCOUNT_ID}"
          
          # Create archive
          git archive -o $ZIPFILE HEAD
          
          # Upload to S3
          aws s3 cp $ZIPFILE s3://$AWS_BUCKET/$ZIPFILE
          
          # Create application version
          aws elasticbeanstalk create-application-version \
            --application-name test \
            --version-label "$VERSION_LABEL" \
            --source-bundle S3Bucket="$AWS_BUCKET",S3Key="$ZIPFILE" \
            --region $AWS_REGION
          
          # Wait for version to become "PROCESSED"
          for i in {1..10}; do
            STATUS=$(aws elasticbeanstalk describe-application-versions \
              --application-name test \
              --version-labels "$VERSION_LABEL" \
              --query "ApplicationVersions[0].Status" \
              --output text \
              --region $AWS_REGION)
          
            echo "Version status: $STATUS"
          
            if [[ "$STATUS" == "PROCESSED" ]]; then
              echo "Version is ready to deploy"
              break
            fi
          
            if [[ $i -eq 10 ]]; then
              echo "Timed out waiting for version to be processed"
              exit 1
            fi
          
            sleep 5
          done
          
          # Deploy the version
          aws elasticbeanstalk update-environment \
            --environment-name b2-vue-env2 \
            --version-label "$VERSION_LABEL" \
            --region $AWS_REGION
          
          
